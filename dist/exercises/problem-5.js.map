{"version":3,"sources":["../../src/exercises/problem-5.js"],"names":["findSmallestNumberDivisibleByIntegersUpTo","highestDivisor","recur","candidate","isDivisibleByIntegersUpTo","bind","target","primeApproach","factor","getHighestFactorPowers","factorPowers","Map","factors","updatedFactorPowers","updateFactorPowers","intermediateMap","a","reduce","map","b","obj","product","lowestPrime","getLowestPrime","newProduct","attempt"],"mappings":";;;;;;;AAAA;;;;AAEA,SAASA,yCAAT,CAAoDC,cAApD,EAAqE;AACpE,UAASC,KAAT,CAAgBD,cAAhB,EAAgCE,SAAhC,EAA4C;AAC3C,MAAKC,0BAA2BH,cAA3B,EAA2CE,SAA3C,CAAL,EAA8D,OAAOA,SAAP;;AAE9D,SAAOD,MAAMG,IAAN,CAAY,IAAZ,EAAkBJ,cAAlB,EAAkCE,YAAUF,cAA5C,CAAP;AACA;;AAED,QAAO,yBAAYC,MAAMG,IAAN,CAAY,IAAZ,EAAkBJ,cAAlB,EAAkCA,cAAlC,CAAZ,CAAP;AACA;;AAED,SAASG,yBAAT,CAAmCH,cAAnC,EAAmDK,MAAnD,EAA2D;AAC1D,KAAKL,iBAAiB,CAAtB,EAA0B,OAAO,IAAP;;AAE1B,KAAKK,SAASL,cAAT,KAA4B,CAAjC,EAAqC,OAAOG,0BAA2BH,iBAAiB,CAA5C,EAA+CK,MAA/C,CAAP;;AAErC,QAAO,KAAP;AACA;;AAED,SAASC,aAAT,CAAuBN,cAAvB,EAAuC;AACtC,QAAOO,OAAOP,cAAP,CAAP;AACA;;AAED,SAASQ,sBAAT,CAAgCR,cAAhC,EAAwE;AAAA,KAAxBS,YAAwB,uEAAX,IAAIC,GAAJ,EAAW;;AACvE,KAAIV,iBAAiB,CAArB,EAAwB,OAAOS,YAAP;;AAExB,KAAIE,UAAUJ,OAAOP,cAAP,CAAd;AACA,KAAIY,sBAAsBC,mBAAoBJ,YAApB,EAAkCE,OAAlC,CAA1B;;AAEA,QAAOH,uBAAwBR,iBAAe,CAAvC,EAA0CY,mBAA1C,CAAP;AACA;;AAED,SAASC,kBAAT,CAA6BJ,YAA7B,EAA2CE,OAA3C,EAAqD;AACpD,KAAIG,kBAAkBC,EAAEC,MAAF,CAAS,UAASC,GAAT,EAAcC,CAAd,EAAiB;AAC/CC,MAAID,CAAJ,IAAS,EAAEC,IAAID,CAAJ,CAAF,IAAY,CAArB;AACA,SAAOC,GAAP;AACA,EAHqB,EAGnB,EAHmB,CAAtB;AAIA;;AAED,SAASZ,MAAT,CAAgBa,OAAhB,EAAyB;AACxB,KAAIC,cAAcC,eAAeF,OAAf,CAAlB;AACA,KAAIG,aAAaH,UAAUC,WAA3B;AACA,QAAQE,aAAa,CAAd,IAAoBF,WAApB,4BAAoCd,OAAOgB,UAAP,CAApC,KAA0D,CAACF,WAAD,CAAjE;AACA;;AAED,SAASC,cAAT,CAAwBF,OAAxB,EAAiC;AAChC,UAASnB,KAAT,CAAemB,OAAf,EAAwBI,OAAxB,EAAiC;AAChC,MAAIA,UAAUJ,UAAU,CAAxB,EAA2B;AAC1B,UAAOA,OAAP;AACA,GAFD,MAEO,IAAIA,UAAUI,OAAV,KAAsB,CAA1B,EAA6B;AACnC,UAAOA,OAAP;AACA,GAFM,MAEA;AACN,UAAOvB,MAAMG,IAAN,CAAW,IAAX,EAAiBgB,OAAjB,EAA0BI,UAAQ,CAAlC,CAAP;AACA;AACD;AACD,QAAO,yBAAWvB,MAAMG,IAAN,CAAW,IAAX,EAAiBgB,OAAjB,EAA0B,CAA1B,CAAX,CAAP;AACA;;QAEQjB,yB,GAAAA,yB;QAA2BJ,yC,GAAAA,yC;QAA2CO,a,GAAAA,a","file":"problem-5.js","sourcesContent":["import {trampoline} from \"../helpers\"\n\nfunction findSmallestNumberDivisibleByIntegersUpTo( highestDivisor ) {\n\tfunction recur( highestDivisor, candidate ) {\n\t\tif ( isDivisibleByIntegersUpTo( highestDivisor, candidate ) ) return candidate;\n\n\t\treturn recur.bind( null, highestDivisor, candidate+highestDivisor );\n\t}\n\n\treturn trampoline( recur.bind( null, highestDivisor, highestDivisor ) );\n}\n\nfunction isDivisibleByIntegersUpTo(highestDivisor, target) {\n\tif ( highestDivisor < 2 ) return true;\n\n\tif ( target % highestDivisor === 0 ) return isDivisibleByIntegersUpTo( highestDivisor - 1, target );\n\n\treturn false;\n}\n\nfunction primeApproach(highestDivisor) {\n\treturn factor(highestDivisor);\n}\n\nfunction getHighestFactorPowers(highestDivisor, factorPowers=new Map()) {\n\tif (highestDivisor < 2) return factorPowers;\n\n\tlet factors = factor(highestDivisor);\n\tlet updatedFactorPowers = updateFactorPowers( factorPowers, factors );\n\n\treturn getHighestFactorPowers( highestDivisor-1, updatedFactorPowers );\n}\n\nfunction updateFactorPowers( factorPowers, factors ) {\n\tlet intermediateMap = a.reduce(function(map, b) {\n\t\tobj[b] = ++obj[b] || 1;\n\t\treturn obj;\n\t}, {});\n}\n\nfunction factor(product) {\n\tlet lowestPrime = getLowestPrime(product);\n\tlet newProduct = product / lowestPrime;\n\treturn (newProduct > 3) ? [lowestPrime, ...factor(newProduct)] : [lowestPrime];\n}\n\nfunction getLowestPrime(product) {\n\tfunction recur(product, attempt) {\n\t\tif (attempt > product / 2) {\n\t\t\treturn product;\n\t\t} else if (product % attempt === 0) {\n\t\t\treturn attempt;\n\t\t} else {\n\t\t\treturn recur.bind(null, product, attempt+1);\n\t\t}\n\t}\n\treturn trampoline(recur.bind(null, product, 2));\n}\n\nexport { isDivisibleByIntegersUpTo, findSmallestNumberDivisibleByIntegersUpTo, primeApproach }"]}